(function(f,m){typeof exports=="object"&&typeof module<"u"?m(exports,require("@capacitor/core")):typeof define=="function"&&define.amd?define(["exports","@capacitor/core"],m):(f=typeof globalThis<"u"?globalThis:f||self,m(f.CapacitorFileTransfer={},f.capacitorExports))})(this,function(f,m){"use strict";function E(u){u.CapacitorUtils.Synapse=new Proxy({},{get(e,t){return new Proxy({},{get(s,a){return(r,i,l)=>{const o=u.Capacitor.Plugins[t];if(o===void 0){l(new Error(`Capacitor plugin ${t} not found`));return}if(typeof o[a]!="function"){l(new Error(`Method ${a} not found in Capacitor plugin ${t}`));return}(async()=>{try{const n=await o[a](r);i(n)}catch(n){l(n)}})()}}})}})}function x(u){u.CapacitorUtils.Synapse=new Proxy({},{get(e,t){return u.cordova.plugins[t]}})}function R(u=!1){typeof window>"u"||(window.CapacitorUtils=window.CapacitorUtils||{},window.Capacitor!==void 0&&!u?E(window):window.cordova!==void 0&&x(window))}const v=m.registerPlugin("FileTransfer",{web:()=>Promise.resolve().then(()=>A).then(u=>new u.FileTransferWeb)});R();class U extends m.WebPlugin{constructor(){super(...arguments),this.lastProgressUpdate=0,this.PROGRESS_UPDATE_INTERVAL=100}async downloadFile(e){try{const t=this.buildUrl(e.url,e.params),s=new Headers(e.headers),a={method:e.method||"GET",headers:s,redirect:e.disableRedirects?"manual":"follow"},r=new AbortController,i=e.connectTimeout||6e4,l=setTimeout(()=>r.abort(),i);let o,n=0;try{const h=await fetch(t,{...a,signal:r.signal});if(!h.ok)throw new Error(`HTTP error! status: ${h.status}`);if(e.progress&&h.body){const C=h.body.getReader(),b=parseInt(h.headers.get("content-length")||"0",10),L=h.headers.get("content-type")||"";let y=0;const P=[];for(;;){const{done:w,value:g}=await C.read();if(w)break;g&&(P.push(g),y+=g.length,this.notifyProgress(e.url,y,b,b>0,"download"))}const T=new Uint8Array(y);let F=0;for(const w of P)T.set(w,F),F+=w.length;o=new Blob([T],{type:L}),n=y,e.progress&&this.notifyProgress(e.url,n,n,!0,"download",!0)}else o=await h.blob(),n=o.size}finally{clearTimeout(l)}if(await this.tryWriteToFilesystem(o,e.path))return{path:e.path,blob:o};const p=URL.createObjectURL(o),c=document.createElement("a");return c.href=p,c.download=this.extractFilename(e.path,e.url),document.body.appendChild(c),c.click(),document.body.removeChild(c),URL.revokeObjectURL(p),{blob:o,path:e.path}}catch(t){throw this.handleError(t,e.url,e.path)}}async uploadFile(e){try{let t;if(e.blob)t=e.blob;else{const s=await this.tryReadFromFilesystem(e.path);if(s)t=s;else throw new Error("File upload from path is not supported in web without @capacitor/filesystem plugin. Please provide a blob instead.")}return new Promise((s,a)=>{const r=new XMLHttpRequest,i=this.buildUrl(e.url,e.params);e.progress&&(r.upload.onprogress=n=>{this.notifyProgress(e.url,n.loaded,n.total,n.lengthComputable,"upload")}),r.onload=()=>{if(r.status>=200&&r.status<300){e.progress&&this.notifyProgress(e.url,t.size,t.size,!0,"upload",!0);const n={};r.getAllResponseHeaders().split(`\r
`).forEach(d=>{const[p,c]=d.split(": ");p&&c&&(n[p]=c)}),s({bytesSent:t.size,responseCode:r.status.toString(),response:r.responseText,headers:n})}else a(new Error(`HTTP error! status: ${r.status}`))},r.onerror=()=>{a(new Error("Network error occurred"))},r.open(e.method||"POST",i,!0),e.headers&&Object.entries(e.headers).forEach(([n,d])=>{r.setRequestHeader(n,d)});const l=new FormData,o=e.fileKey||"file";l.append(o,t,e.path),e.params&&Object.entries(e.params).forEach(([n,d])=>{Array.isArray(d)?d.forEach(p=>l.append(n,p)):l.append(n,d)}),r.send(l)})}catch(t){throw this.handleError(t,e.path,e.url)}}buildUrl(e,t){if(!t||Object.keys(t).length===0)return e;const s=new URL(e);return Object.entries(t).forEach(([a,r])=>{Array.isArray(r)?r.forEach(i=>s.searchParams.append(a,i)):s.searchParams.append(a,r)}),s.toString()}notifyProgress(e,t,s,a,r,i=!1){const l=Date.now();if(i||l-this.lastProgressUpdate>=this.PROGRESS_UPDATE_INTERVAL){const o={type:r,url:e,bytes:t,contentLength:s,lengthComputable:a};this.notifyListeners("progress",o),this.lastProgressUpdate=l}}handleError(e,t,s){return e instanceof TypeError&&e.message==="Failed to fetch"?{code:"OS-PLUG-FLTR-0008",message:"Failed to connect to server",source:t,target:s}:e instanceof Error?{code:"OS-PLUG-FLTR-0011",message:e.message,source:t,target:s}:{code:"OS-PLUG-FLTR-0011",message:"An unknown error occurred",source:t,target:s}}extractFilename(e,t){const a=e.split("?")[0].split("#")[0].split(/[/\\]/);let r=a[a.length-1];if(!r.includes(".")){const i=t.split(".");if(i.length>1){const l=i[i.length-1].split("?")[0];r=`${i[i.length-2].split("/").pop()}.${l}`}}return r||(r="download"),r}isFilesystemAvailable(){try{return!!globalThis?.Capacitor?.Plugins?.Filesystem}catch{return!1}}async tryReadFromFilesystem(e){if(!this.isFilesystemAvailable())return null;try{const t=window.Capacitor?.Plugins?.Filesystem;if(!t)return null;const a=(await t.readFile({path:e})).data;if(!a)throw new Error("No data returned from Filesystem plugin");const r=this.getMimeTypeFromPath(e)||"application/octet-stream",i=atob(a),l=[];for(let o=0;o<i.length;o+=512){const n=i.slice(o,o+512),d=new Array(n.length);for(let c=0;c<n.length;c++)d[c]=n.charCodeAt(c);const p=new Uint8Array(d);l.push(p)}return new Blob(l,{type:r})}catch(t){return console.error("Error reading file from Filesystem:",t),null}}async tryWriteToFilesystem(e,t){if(!this.isFilesystemAvailable())return!1;try{const s=window.Capacitor?.Plugins?.Filesystem;if(!s)return!1;const a=await this.blobToBase64(e);if(!a)throw new Error("Failed to convert blob to base64");const r=t.split("/");if(r.length>1){const i=r.slice(0,-1).join("/");await s.mkdir({path:i,recursive:!0})}return await s.writeFile({path:t,data:a.split(",")[1],recursive:!0}),!0}catch(s){return console.error("Error writing file to Filesystem:",s),!1}}blobToBase64(e){return new Promise((t,s)=>{const a=new FileReader;a.onload=()=>t(a.result),a.onerror=()=>s(new Error("Failed to convert blob to base64")),a.readAsDataURL(e)})}getMimeTypeFromPath(e){const t=e.split(".").pop()?.toLowerCase();return t&&{jpg:"image/jpeg",jpeg:"image/jpeg",png:"image/png",gif:"image/gif",pdf:"application/pdf",txt:"text/plain",html:"text/html",htm:"text/html",json:"application/json",doc:"application/msword",docx:"application/vnd.openxmlformats-officedocument.wordprocessingml.document",xls:"application/vnd.ms-excel",xlsx:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",zip:"application/zip",mp3:"audio/mpeg",mp4:"video/mp4",wav:"audio/wav",xml:"application/xml",csv:"text/csv"}[t]||null}}const A=Object.freeze(Object.defineProperty({__proto__:null,FileTransferWeb:U},Symbol.toStringTag,{value:"Module"}));f.FileTransfer=v,Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});
